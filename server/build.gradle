buildscript {
	ext {
		springBootVersion = '1.3.1.RELEASE'
	}
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
		classpath 'com.bmuschko:gradle-cargo-plugin:2.2.2'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot' 
apply plugin: 'war'
apply plugin: 'com.bmuschko.cargo'

war {
	baseName = 'torrentfeed'
	version = '0.0.1-SNAPSHOT'
	archiveName "torrentfeed.war"
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile project(':TorrentFeedProvider')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-web')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test') 
	
    def cargoVersion = '1.4.17'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
            "org.codehaus.cargo:cargo-ant:$cargoVersion"	
}


task copyToTomcat(type: Copy, dependsOn: war) {
	from war
	into '/opt/tomcat/webapps'
}

cargo {
	containerId = 'tomcat8x'
	port = 8080

	deployable {
        context = 'torrentfeed'
    }
	
	remote {
		hostname = 'localhost'
		username = 'tomcat'
		password = 's3cret'
	}
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}